#ifndef __NPY_BINSEARCH_H__
#define __NPY_BINSEARCH_H__

#include "npy_sort.h"

/* Python include is for future object sorts */
#include <Python.h>
#include <numpy/npy_common.h>
#include <numpy/ndarraytypes.h>


typedef void (PyArray_BinSearchFunc)(const char *, const char *, char *,
                                     npy_intp, npy_intp,
                                     npy_intp, npy_intp, npy_intp);

typedef struct{
    enum NPY_TYPES typenum;
    PyArray_BinSearchFunc *binsearch[NPY_NSEARCHSIDES];
} binsearch_map;



/**begin repeat
 *
 * #suff = bool, byte, ubyte, short, ushort, int, uint, long, ulong,
 *         longlong, ulonglong, half, float, double, longdouble,
 *         cfloat, cdouble, clongdouble, datetime, timedelta#
 */
/**begin repeat1
 *
 * #side = left, right#
 */
void
binsearch_@side@_@suff@(const char *arr, const char *key, char *ret,
                        npy_intp arr_len, npy_intp key_len,
                        npy_intp arr_str, npy_intp key_str, npy_intp ret_str);
/**end repeat1**/
/**end repeat**/

void npy_binsearch_left(const char *arr, const char *key, char *ret,
                        npy_intp arr_len, npy_intp key_len,
                        npy_intp arr_str, npy_intp key_str,
                        npy_intp ret_str, npy_comparator cmp);
void npy_binsearch_right(const char *arr, const char *key, char *ret,
                         npy_intp arr_len, npy_intp key_len,
                         npy_intp arr_str, npy_intp key_str,
                         npy_intp ret_str, npy_comparator cmp);

static NPY_INLINE PyArray_BinSearchFunc*
get_binsearch_func(int type, NPY_SEARCHSIDE side)
{
    static binsearch_map _binsearch_map[] = {
    /**begin repeat
     *
     * #TYPE = BOOL, BYTE, UBYTE, SHORT, USHORT, INT, UINT, LONG, ULONG,
     *         LONGLONG, ULONGLONG, HALF, FLOAT, DOUBLE, LONGDOUBLE,
     *         CFLOAT, CDOUBLE, CLONGDOUBLE, DATETIME, TIMEDELTA#
     * #suff = bool, byte, ubyte, short, ushort, int, uint, long, ulong,
     *         longlong, ulonglong, half, float, double, longdouble,
     *         cfloat, cdouble, clongdouble, datetime, timedelta#
     */
        {NPY_@TYPE@, {&binsearch_left_@suff@, &binsearch_right_@suff@,},},
    /**end repeat**/
    };
    static npy_intp num_funcs = sizeof(_binsearch_map) /
                                sizeof(_binsearch_map[0]);
    npy_intp j;
    
    if (side >= NPY_NSEARCHSIDES) {
        return NULL;
    }
    for (j = 0; j < num_funcs; j++) {
        if (type == _binsearch_map[j].typenum) {
            return _binsearch_map[j].binsearch[side];
        }
    }
    return NULL;
}

#endif