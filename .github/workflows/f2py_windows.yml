name: Windows F2PY tests

on:
  push:
    branches:
      - maintenance/**
  pull_request:
    branches:
      - main
      - maintenance/**
  workflow_dispatch:

permissions:
   contents: read  # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  get_commit_message:
    name: Get commit message
    runs-on: ubuntu-latest
    if: "github.repository == 'numpy/numpy'"
    outputs:
      message: ${{ steps.commit_message.outputs.message }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        # Gets the correct commit message for pull request
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Get commit message
        id: commit_message
        run: |
          set -xe
          COMMIT_MSG=$(git log --no-merges -1 --oneline)
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo github.ref ${{ github.ref }}

  test_f2py_rtools:
    name: cp312 (meson) f2py rtools
    runs-on: windows-2019
    needs: get_commit_message
    if: >-
      contains(needs.get_commit_message.outputs.message, '[winci f2py]') ||
      github.event_name == 'schedule' ||
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && ( ! endsWith(github.ref, 'dev0')))
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          submodules: recursive
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: 'environment.yml'
      - name: Install rtools (mingw-w64)
        run: |
          choco install rtools -y --no-progress --force --version=4.0.0.20220206
          echo "c:\rtools40\ucrt64\bin;" >> $env:GITHUB_PATH
          choco install -y --stoponfirstfailure --checksum 6004DF17818F5A6DBF19CB335CC92702 pkgconfiglite
      - name: pip-packages
        run: |
          python -m pip install -r requirements/test_requirements.txt
      - name: Build
        run: |
          pip install -r requirements/ci_requirements.txt
          spin config-openblas --with-scipy-openblas=32
          $env:PKG_CONFIG_PATH="$pwd/.openblas"
          python -m pip install .
      - name: Test F2PY
        run: |
          spin test -t numpy.f2py -m full -- -vvvvvv
