name: Test on Cygwin
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  cygwin_build_test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Install Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: x64
          install-dir: 'C:\tools\cygwin'
          packages: >
            python37-devel python37-zipp python37-importlib-metadata
            python37-cython python37-pip python37-wheel python37-cffi
            python37-pytz python37-setuptools python37-pytest
            python37-hypothesis liblapack-devel libopenblas
            gcc-fortran git dash
      - name: Set Windows PATH
        uses: egor-tensin/cleanup-path@v1
        with:
          dirs: 'C:\tools\cygwin\bin;C:\tools\cygwin\lib\lapack'
      - name: Verify that bash is Cygwin bash
        run: |
          command bash
          bash -c "uname -svrmo"
      - name: Update with Cygwin git
        # fetch-depth=0 above should make this short.
        run: |
          dash -c "which git; /usr/bin/git fetch --all -p"
      - name: Verify python version
        # Make sure it's the Cygwin one, not a Windows one
        run: |
          dash -c "which python3.7; /usr/bin/python3.7 --version -V"
      - name: Build NumPy wheel
        run: |
          dash -c "/usr/bin/python3.7 -m pip install 'setuptools<49.2.0' pytest pytz cffi pickle5 importlib_metadata typing_extensions"
          dash -c "/usr/bin/python3.7 setup.py bdist_wheel"
      - name: Install new NumPy
        run: |
          bash -c "/usr/bin/python3.7 -m pip install dist/numpy-*cp37*.whl"
      - name: Run NumPy test suite
        run: >-
          dash -c "/usr/bin/python3.7 runtests.py -n -vv"
      - name: Upload wheel if tests fail
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: numpy-cygwin-wheel
          path: dist/numpy-*cp37*.whl
      - name: On failure check the extension modules
        if: failure()
        run: |
          dash -c "/usr/bin/python3.7 -m pip show numpy"
          dash -c "/usr/bin/python3.7 -m pip show -f numpy | grep .dll"
          echo >list_dlls_dos.sh '#!/bin/dash
          site_packages=$(python3.7 -m pip show numpy | \
              grep Location | cut -d " " -f 2 -);
          dll_list=$(for name in $(python3.7 -m pip show -f numpy | \
              grep -F .dll); do echo ${site_packages}/${name}; done)
          echo "Checks for existence, permissions and file type"
          ls -l ${dll_list}
          file ${dll_list}
          echo "Dependency checks"
          ldd ${dll_list} | grep -F -e " => not found" && exit 1
          cygcheck ${dll_list} >cygcheck_dll_list 2>cygcheck_missing_deps
          grep -F -e "cygcheck: track_down: could not find " cygcheck_missing_deps && exit 1
          echo "Import tests"
          mkdir -p dist/
          cd dist/
          for name in ${dll_list};
          do
              echo ${name}
              ext_module=$(echo ${name} | \
                  sed -E \
                      -e "s/^\/+(home|usr).*?site-packages\/+//" \
                      -e "s/.cpython-3.m?-x86(_64)?-cygwin.dll$//" \
                      -e "s/\//./g")
              python3.7 -c "import ${ext_module}"
          done
          '
          dash -c "/bin/tr -d '\r' <list_dlls_dos.sh >list_dlls_unix.sh"
          dash "list_dlls_unix.sh"
