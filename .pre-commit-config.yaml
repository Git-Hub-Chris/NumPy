---
repos:
  ### Always-run hooks ###
  # This section includes hooks that run whenever relevant files change.
  #
  # If you are not familiar with pre-commit, see documentation here:
  # https://numpy.org/doc/stable/dev/development_workflow.html


  # Basic checkers
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      # File validity checkers
      - id: check-yaml
      - id: check-toml

      # Simple cleanliness things
      - id: fix-byte-order-marker
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
      # Defaults to 500 kB
      - id: check-added-large-files

  # "Darker" runs the black formatter, isort import sorter, and
  # flake8 checker only on edited lines rather than entire file
  - repo: https://github.com/akaihola/darker
    rev: 1.5.0
    hooks:
      - id: darker
        args:
          - --isort
          - -L
          - flake8
        additional_dependencies:
          - isort
          - flake8
          - flake8-bugbear
          - pep8-naming

  # We want to use git-clang-format which is provided by the clang-format wheel,
  # but not exposed in its precommit hook.
  # Do not specify args here; use the tools/precommit-clang-format.sh that this
  # calls.
  - repo: local
    hooks:
      - id: clang-format-diff
        name: clang-format-diff
        entry: bash tools/precommit-clang-format.sh
        language: python
        types_or: [c++, c]
        verbose: true
        additional_dependencies:
          - clang-format==14.0.3

  # YAML Formatter
  - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
    rev: 0.2.1
    hooks:
      - id: yamlfmt
        args: [--mapping, '2', --sequence, '4', --offset, '2', --width, '88']
        # Will eventually apply to all YAML files
        files: \.pre-commit-config.yaml


  ### Manually-run hooks ###
  # These hooks are disabled by default because NumPy currently has one or more
  # files that are known to fail. You are encouraged to run these hooks if you
  # are changing some files, and aim to have them pass. However, the goal is
  # that somebody doing development is not required to work on anything outside
  # of their own section of interest, so do not worry if other parts of files fail.
  # (though in general, if you would _like_ to fix them, that would be amazing!)

  # Allow black to be run on entire file manually
  # Run with: pre-commit run --hook-stage manual black
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        stages: [manual]

  # Apply black formatting to docstrings and .rst files
  # Run with: pre-commit run --hook-stage manual blacken-docs
  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        args: [--line-length, '79']
        stages: [manual]

  # Allow isort to be run on entire file manually
  # Run with: pre-commit run --hook-stage manual isort
  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
        stages: [manual]

  # Allow flake8 to be run on entire file manually
  # Run with: pre-commit run --hook-stage manual flake8
  - repo: https://github.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        stages: [manual]
        additional_dependencies:
          - flake8-bugbear
          - flake8-import-order
          - flake8-builtins
          - flake8-future-annotations
          - flake8-docstrings
          - flake8-rst-docstrings
          - pep8-naming

  # Allow clang-format to be run on entire file manually
  # Run with: pre-commit run --hook-stage manual clang-format
  - repo: https://github.com/pre-commit/mirrors-clang-format
    rev: v14.0.5
    hooks:
      - id: clang-format
        stages: [manual]

  # Validate .rst files
  # Run with: pre-commit run --hook-stage manual rstcheck
  - repo: https://github.com/myint/rstcheck
    rev: v6.0.0.post1
    hooks:
      - id: rstcheck
        stages: [manual]

  # bash/sh checker
  # Run with: pre-commit run --hook-stage manual shellcheck
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.8.0.4
    hooks:
      - id: shellcheck
        stages: [manual]

  # bash/sh formatter
  # Run with: pre-commit run --hook-stage manual beautysh
  - repo: https://github.com/lovesegfault/beautysh
    rev: v6.2.1
    hooks:
      - id: beautysh
        stages: [manual]

  # Fortran formatter
  # Run with: pre-commit run --hook-stage manual fprettify
  - repo: https://github.com/pseewald/fprettify
    rev: v0.3.7
    hooks:
      - id: fprettify
        stages: [manual]

  # Dockerfile linter
  # Run with: pre-commit run --hook-stage manual hadolint
  - repo: https://github.com/AleksaC/hadolint-py
    rev: v2.10.0
    hooks:
      - id: hadolint
        # Ignore not pinning versions on `pip install``
        args: [--ignore, DL3013]
        stages: [manual]
