---
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.2.0
    hooks:
      # File validity checkers
      - id: check-yaml
      - id: check-toml

      # Simple cleanliness things
      - id: fix-byte-order-marker
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: mixed-line-ending
      # Defaults to 500 kB
      - id: check-added-large-files

  # "Darker" runs the black formatter, isort import sorter, and
  # flake8 checker only on edited lines rather than entire file
  - repo: https://github.com/akaihola/darker
    rev: 1.5.0
    hooks:
      - id: darker
        args:
          # - '--isort'
          - -L
          - flake8
        additional_dependencies:
          # - isort
          - flake8
          - flake8-bugbear
          - pep8-naming

  # We want to use git-clang-format which is provided by the clang-format wheel,
  # but not exposed in its precommit hook.
  - repo: local
    hooks:
      - id: clang-format-diff
        name: clang-format-diff
        entry: bash tools/precommit-clang-format.sh
        language: python
        args: [--style, file]
        types_or: [c++, c]
        verbose: true
        additional_dependencies:
          - clang-format==14.0.3

  # Allow black to be run on entire file manually
  # Use pre-commit run --hook-stage manual black
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        stages: [manual]

  # Allow isort to be run on entire file manually
  # Use pre-commit run --hook-stage manual isort
  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort
        stages: [manual]

  # Allow flake8 to be run on entire file manually
  # Use pre-commit run --hook-stage manual flake8
  - repo: https://github.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        stages: [manual]
        additional_dependencies:
          - flake8-bugbear
          - pep8-naming

  # Allow clang-format to be run on entire file manually
  # Use pre-commit run --hook-stage manual clang-format-whole-file
  - repo: https://github.com/jlebar/pre-commit-hooks
    rev: 62ca83ba4958da48ea44d9f24cd0aa58633376c7
    hooks:
      - id: clang-format-whole-file
        stages: [manual]
        verbose: true
        types_or: [c++, c]

  # Validate .rst files
  - repo: https://github.com/myint/rstcheck
    rev: v5.0.0
    hooks:
      - id: rstcheck
        # stages: [manual

    # bash/sh checker
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.8.0.4
    hooks:
      - id: shellcheck

    # bash/sh formatter
  - repo: https://github.com/lovesegfault/beautysh
    rev: v6.2.1
    hooks:
      - id: beautysh
        args: [--tab]

    # YAML Formatter
  - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
    rev: 0.2.1
    hooks:
      - id: yamlfmt
        args: [--mapping, '2', --sequence, '4', --offset, '2', --width, '88']

    # Fortran beautifier
  - repo: https://github.com/pseewald/fprettify
    rev: v0.3.7
    hooks:
      - id: fprettify

  # Docker linter
  - repo: https://github.com/hadolint/hadolint
    rev: v2.10.0
    hooks:
      - id: hadolint
