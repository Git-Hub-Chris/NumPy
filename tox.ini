# 'Tox' is a tool for automating sdist/build/test cycles against
# multiple Python versions:
#   https://pypi.python.org/pypi/tox
#   https://tox.readthedocs.io/

# Running the command 'tox' while in the root of the numpy source
# directory will:
#   - Create a numpy source distribution (setup.py sdist)
#   - Then for every supported version of Python:
#     - Create a virtualenv in .tox/py$VERSION and install
#       dependencies. (These virtualenvs are cached across runs unless
#       you use --recreate.)
#     - Use pip to install the numpy sdist into the virtualenv
#     - Run the numpy tests
# To run against a specific subset of Python versions, use:
#   tox -e py39

# Extra arguments will be passed to runtests.py. To run
# the full testsuite:
#   tox full
# To run with extra verbosity:
#   tox -- -v

# Tox assumes that you have appropriate Python interpreters already
# installed and that they can be run as (e.g.) 'python3.8'

[tox]
envlist =
  py38,py39

[testenv]
deps= -Ur{toxinidir}/test_requirements.txt
changedir={envdir}
commands={envpython} -b {toxinidir}/runtests.py --mode=full {posargs:}

# Not run by default. Set up the way you want then use 'tox -e debug'
# if you want it:
[testenv:debug]
basepython=python-dbg
commands=gdb --args {envpython} {toxinidir}/runtests.py --mode=full {posargs:}


[flake8]
# E: pycodestyle errors
# F: flake8 pyflakes
# N: pep8 naming
# W: pycodestyle warnings
# B: bugbear
# B9: bugbear opinions
select = E, F, W, B, B9
# B950: Line too long. Handled by E501 and Black
# N801: Ignore rule that class names as UpperCamelCase
# W503: Line break before binary operator
# E203: Whitespace before :, black is pep8 and flake8 is wrong here
ignore = B950, N801, W503, E203
# Creates C901: max-complexity, follows cyclomatic guidelines.
# May need to be disabled in some files
# https://en.wikipedia.org/wiki/Cyclomatic_complexity
max-complexity = 10
max-line-length = 79
per-file-ignores =
    # Ignore unused import error
    **/__init__.py:F401
    # import not at top of file
    runtests.py:E402
