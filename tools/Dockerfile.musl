# Temporary file for debugging musl wheels
# Run the following to create a wheel
# $ CIBW_BUILD=cp310-musllinux_x86_64 CIBW_TEST_SKIP=* cibuildwheel --platform linux
# Build this dockerfile from top level numpy directory with:
# $ docker build -f tools/Dockerfile.musl . -t numpy-musl
# To enter:
# $ docker run -it -p 5678:5678 --rm numpy-musl sh
# Can run specific tests with e.g.:
# $ runtests -v -t /numpy/core/tests/test_longdouble.py 
# All tests by omitting everything including and after -t. Disable tests with -k syntax:
# $ runtests -vv -m full -- -k 'not (test_large_archive or  test_big_arrays)'
# This is all rather cumbersome, I could use some advice on better ways to debug

# TODO: Remove file before merge
FROM python:3.10-alpine

# Allow for aliases
ENV ENV="/root/.profile"

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1


# Don't _really_ want build-base but it seems like some tests require gcc?
# Specifically test_mem_policy
RUN apk add --no-cache build-base \
    && pip install --no-cache-dir debugpy

ENV CIBW_BUILD=cp310-musllinux_x86_64
ENV CIBW_TEST_SKIP=*


# Copy missing files required for testing but not in wheel
COPY runtests.py test_requirements.txt .coveragerc /numpy-test/

# Give us both the source and wheels to work with, as needed
COPY wheelhouse/ /wheels
WORKDIR /py


# Install to environment to avoid possible conflict with /numpy
RUN pip install --no-cache-dir /wheels/numpy*.whl \
    && pip install --no-cache-dir -r /numpy-test/test_requirements.txt \
    && ln -s /usr/local/lib/python3.10/site-packages/numpy /numpy \
    && ln -s /numpy-test/* /numpy-test/.coveragerc /numpy \
    && echo "alias runtests='python /numpy/runtests.py -n'" >> ~/.profile \
    && echo "alias dbgtests='python -m debugpy --wait-for-client --listen 0.0.0.0:5678 /numpy/runtests.py -v -n'" >> ~/.profile


EXPOSE 5678
CMD ["runtests", "-v"]
# Command for debuging
# python debugpy --wait-for-client --listen 0.0.0.0:5678 /numpy/runtests.py
