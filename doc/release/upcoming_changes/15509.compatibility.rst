Disallow type-promotion of structured dtypes with different field names
-----------------------------------------------------------------------
Operations such as ``np.concatenate([a, b])`` and
``np.promote_types(a.dtype, b.dtype)``  will now raise a ``TypeError`` if
``a`` and ``b`` are structured arrays whose dtypes have different field names,
even if the field types are castable, and if the field names are the same it will
promote to a "packed" memory layout with native endianness. Code which now
fails should be modified to rename the fields, using ``.astype`` or
``numpy.lib.recfunctions.rename_fields`` depending on the desired behavior.
Furthermore, ``np.can_cast`` now more consistently reports that structured
dtypes with different field-names but castable field dtypes are castable.
Previously some cases were overlooked.
